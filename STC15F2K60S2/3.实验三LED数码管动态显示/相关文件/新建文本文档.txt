///////////////////////////////////////////////////////////////////////////////
//设计项目:模拟开关控制指示灯设计实验                                        //
//设 计 人:畅福善                                                            //
//设计时间:2014.4.27                                                         //
//设计说明:设计一个开关计数器， 实现一个模拟开关连续计数，控制2个数码管显示 //
//         硬件连接条件:1、单片机P0.0~P0.7依次连接第1~8个LED指示灯          //
//                      2、4个模拟开关依次连接到P3.4,P3.5,P3.6,P3.7          //
///////////////////////////////////////////////////////////////////////////////
#include <stc15f2k60s2.h> 
////////函数说明////////
void delay02s(void);		//延时2秒子程序//
void delay10ms(void);		//延时10ms的子程序//
void key(void);             //按键函数
void display(void);         //显示函数
void display_seg(void);     //数码管显示函数 
////////变量说明////////
unsigned  char count;/////////按键计数器
/*******数码管码表*****************/
unsigned	char	code	table[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71,0x40,0x00};
///////////0,    1,   2,   3,   4,   5,   6,   7,   8,   9,   a,   b,   c,   d,   e,   f,   -
/*******两个数码管的高低位*****************/						 
unsigned  char shiwei;//10位数据
unsigned  char gewei;//个位数据      
////////SFR定义///////
///led定义
sbit L1=P1^0;//////定义第1个指示灯的名称为L1  还可以直接采用P0_0;因为AT89X51.H内部已做定义,下依次类推
sbit L2=P1^1;//////定义第2个指示灯的名称为L2 
sbit L3=P1^2;//////定义第3个指示灯的名称为L3  
sbit L4=P1^3;//////定义第4个指示灯的名称为L4 
sbit L5=P1^4;//////定义第5个指示灯的名称为L5  
sbit L6=P1^5;//////定义第6个指示灯的名称为L6 
sbit L7=P1^6;//////定义第7个指示灯的名称为L7  
sbit L8=P1^7;//////定义第8个指示灯的名称为L8 
//按键定义
sbit key_1=P3^4;//////定义第1个按键为KEY_1
sbit key_2=P3^5;//////定义第1个按键为KEY_2
sbit key_3=P4^2;//////定义第1个按键为KEY_3
sbit key_4=P4^4;//////定义第1个按键为KEY_4
sbit P2_4=P2^4;
sbit P2_3=P2^3;
sbit P2_2=P2^2;
sbit P2_6=P2^6;
sbit P2_7=P2^7;
void main(void) 			//主程序//
{   
/////////初始化区////////////////
P3=0xff;/////初始化P3口准备读取按键（按键输入）
while(1) 			    //进入循环//以下为无限循环程序区
     	{ 
		 key(); 			//调用按键函数//
		 //display();         //调用显示函数//
		 display_seg();     //调用数码管显示函数 
        } 
}
///////////////////////////////////////////////////
//函数名称:void key(void)
//函数功能:按键函数
//入口参数:
//出口参数:
//函数说明:
///////////////////////////////////////////////////
void key(void)      //按键函数
{
if(key_1==0)/////////如果按键按下
{
	delay10ms();///////延时10ms///越过抖动区7ms
	if(key_1==0)///////按键的确按下
	  {
		count++;///////按键计数器计数
		if(count>=16){count=0;}//////控制计数器最大值;16即为16进制;20即为20进制;但最大计数255，因为count定义的是unsigend char
//P0=~count;///////将计数值送P0口利用LED指示灯以BCD码（8421码）显示
		while(key_1==0){;}///////按键等待抬起
		}

	}
}
///////////////////////////////////////////////////
//函数名称:void display(void)
//函数功能:显示函数
//入口参数:
//出口参数:
//函数说明:
///////////////////////////////////////////////////
void display(void)      //显示函数
{
//////////////持续显示程序/////////////////////////////
	P0=~count;///////将计数值送P0口利用LED指示灯以BCD码（8421码）显示
//////////////闪烁显示函数/////////////////////////////
/*
	P0=~count;///////将计数值送P0口利用LED指示灯以BCD码（8421码）显示
	delay02s();///延时0.2s
	P0=0xff;///////P0口8条线全送高电平，目的熄灭所有LED指示灯
	delay02s();///延时0.2s
*/
}
///////////////////////////////////////////////////
//函数名称:void display_seg(void)
//函数功能:动态数码管显示函数
//入口参数:
//出口参数:
//函数说明:
///////////////////////////////////////////////////
void display_seg(void)      //数码管显示函数
{
/*//count=7;
//////////////显示数据处理程序/////////////////////////////
shiwei=count/10;//得到10位数据
gewei=count%10;//得到个位数据
//////////////显示程序/////////////////////////////
//十位
////////74LS138译码器驱动数码管位码/////////////////////////
P2_4=1;P2_3=0;P2_2=0;/////CBA=100 Y=
////////74HC573---8路锁存器锁存数据
P0=table[shiwei];///////7段数码管显示数据码输出到锁存器
//seg_data=0;seg_data=1;seg_data=0;///CLK;即数据经过锁存器到7段数码管
delay10ms();///////10毫秒

P0=table[17];//////黑屏显示
//seg_data=0;seg_data=1;seg_data=0;///数据CLK
//个位
////////74LS138译码器驱动数码管位码/////////////////////////
P2_4=1;P2_3=0;P2_2=0;/////CBA=100 Y=
////////74HC573---8路锁存器锁存数据
P0=table[gewei];//////7段数码管显示数据码输出到锁存器
//seg_data=0;seg_data=1;seg_data=0;///CLK;即数据经过锁存器到7段数码管
delay10ms();///////10毫秒

P0=table[17];//////黑屏显示
//seg_data=0;seg_data=1;seg_data=0;///数据CLK
*/
/////////十位显示//////////////////////
P1=table[shiwei];//////数据从P0口送出到IC7---74HC573锁存器
P2_6=0;P2_6=1;P2_6=0;///IC7数据锁存//////clk信号
P0=~0x40;//////位码从P0口送出到IC6---74HC573锁存器
P2_7=0;P2_7=1;P2_7=0;///IC6位码数据锁存
	delay10ms();///延时0.2s
/////////个位显示//////////////////////
P1=table[gewei];//////数据从P0口送出到IC7---74HC573锁存器
P2_6=0;P2_6=1;P2_6=0;///IC7数据锁存
P0=~0x80;//////位码从P0口送出到IC6---74HC573锁存器
P2_7=0;P2_7=1;P2_7=0;///IC6位码数据锁存
	delay10ms();///延时0.2s
	
}
///////////////////////////////////////////////////
//函数名称:void delay10ms(void)
//函数功能:延时10ms秒的子程序
//入口参数:
//出口参数:
//函数说明:
///////////////////////////////////////////////////
void delay10ms(void)		//延时10ms的子程序//
{ 		
//		unsigned char i,j,k; /////局部变量定义
		unsigned char j,k; /////局部变量定义
//  		for(i=20;i>0;i--)   //最外层循环
//			{
		    	for(j=20;j>0;j--)   // 上层循环
					{
				  		for(k=248;k>0;k--) ////内层循环
							{
							;
							}
					}
//			}
}  
///////////////////////////////////////////////////
//函数名称:void delay02s(void)
//函数功能:延时0.2秒的子程序
//入口参数:
//出口参数:
//函数说明:
///////////////////////////////////////////////////
void delay02s(void)		//延时子程序//
{ 		
		unsigned char i,j,k; /////局部变量定义
  		for(i=20;i>0;i--)   //最外层循环
			{
		    	for(j=20;j>0;j--)   // 上层循环
					{
				  		for(k=248;k>0;k--) ////内层循环
							{
							;
							}
					}
			}
}