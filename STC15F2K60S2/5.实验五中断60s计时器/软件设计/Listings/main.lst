C51 COMPILER V9.57.0.0   MAIN                                                              11/29/2021 17:53:07 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /////////////////////////////////////////////////////////////////////////////////
   2          //设计项目:定时器_中断_计数器实验                                              //
   3          //设 计 人:王志俊                                                                                                                          //
   4          //设计时间:2021.11.29                                                           //
   5          //设计说明:设计一个开关计数器， 实现一个模拟开关连续计数，控制8个LED指示灯显示 //
   6          //         利用两位数码管显示，增加数据报警功能，和按键取消报警                //
   7          //         硬件连接条件:1、单片机P0.0~P0.7依次连接第1~8个LED指示灯             //
   8          //                      2、4个模拟开关依次连接到P3.4,P3.5,P3.6,P3.7            //
   9          //                      3、数码管数据连接IC7 锁存控制P2.6                      //
  10          //                      4、数码管数据连接IC6 锁存控制P2.7                      //
  11          /////////////////////////////////////////////////////////////////////////////////
  12          #include <STC15F2K60S2.h> 
  13          
  14          ////////函数说明////////
  15          void delay02s(void);            //延时2秒子程序//
  16          void delay10ms(void);           //延时10ms的子程序//
  17          void delay500us(void);          //延时500us的子程序//
  18          void delay50us(void);           //延时50us的子程序//
  19          
  20          void key(void);             //按键函数
  21          
  22          void display(void);         //显示函数
  23          void display_seg(void);     //数码管显示函数 
  24          
  25          void baojing(void);         //报警函数 
  26          void int_time0(void);       //t0定时器初始化函数  
  27          void alarm_buzzer(void);    //动态报警子函数
  28          void anjianyin(void);
  29          void display_ceshi_8(void); //八位自检
  30          ////////变量说明////////
  31          //led定义
  32          sbit L1=P1^0;//////定义第1个指示灯的名称为L1  还可以直接采用P0_0;因为AT89X51.H内部已做定义,下依次类推
  33          sbit L2=P1^1;//////定义第2个指示灯的名称为L2 
  34          sbit L3=P1^2;//////定义第3个指示灯的名称为L3  
  35          sbit L4=P1^3;//////定义第4个指示灯的名称为L4 
  36          sbit L5=P1^4;//////定义第5个指示灯的名称为L5  
  37          sbit L6=P1^5;//////定义第6个指示灯的名称为L6 
  38          sbit L7=P1^6;//////定义第7个指示灯的名称为L7  
  39          sbit L8=P1^7;//////定义第8个指示灯的名称为L8 
  40          //按键定义
  41          sbit key_1=P3^4;//////定义第1个按键为KEY_1
  42          sbit key_2=P3^5;//////定义第1个按键为KEY_2
  43          sbit key_3=P4^2;//////定义第1个按键为KEY_3
  44          sbit key_4=P4^4;//////定义第1个按键为KEY_4
  45          /////////////////////////////
  46          unsigned  char count;/////////按键计数器
  47          
  48          unsigned  char code table[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x
             -71,0x40};////数码管显示码表
  49          //////////////////////////////0     1    2    3    4    5    6    7    8    9   A    B     C    D    E    F     
             -                                 
  50          
  51          ////////数码管显示定义////////
  52          unsigned  char shiwei;//10位数据
C51 COMPILER V9.57.0.0   MAIN                                                              11/29/2021 17:53:07 PAGE 2   

  53          unsigned  char gewei;//个位数据                                 
  54          unsigned  char SEG_1,SEG_2,SEG_3,SEG_4,SEG_5,SEG_6,SEG_7,SEG_8;//////8个数码管显示单元定义
  55          
  56          ////////与报警有关定义////////
  57          bit flag_baojing;///////定义报警标志
  58          unsigned char  jsq_baojing;///////定义报警时间长短计数器
  59          /////////////////////////////
  60          sbit fmq=P3^2;//////定义fmq为蜂鸣器控制端
  61          
  62          ////////与时间有关定义////////
  63          ///////50ms计数器和1S计数器
  64          unsigned char jsq_50ms,jsq_1s,jsq_2s=99;///////50ms计数器和1S计数器
  65          unsigned char jsq_1min,jsq_1hours;///////1分计数器和1小时计数器
  66          
  67          
  68          unsigned  char key_counter;/////////按键计数器
  69          void main(void)                         //主程序//
  70          {   
  71   1      /////////初始化区////////////////
  72   1      P3=0xff;/////初始化P3口准备读取按键（按键输入）
  73   1      P4=0xff;        
  74   1      //P1_4=0;/////初始化蜂鸣器驱动引脚
  75   1      int_time0();/////初始化t0定时器
  76   1      display_ceshi_8();//八位数码管自检      
  77   1      
  78   1              
  79   1              while(1)                            //进入循环//以下为无限循环程序区
  80   1              { 
  81   2      ////////////////利用中断实验时间与数码管的关系,其中采用中断函数计数//////////////////////////////////////
  82   2                       display_seg();     //调用数码管显示函数
  83   2      
  84   2                       key();                         //调用按键函数//
  85   2      
  86   2                   /*if(flag_baojing==1)
  87   2                              {
  88   2                              TR1=1;
  89   2                              //alarm_buzzer();
  90   2                              //display_seg();
  91   2                              }
  92   2                      else
  93   2                              {
  94   2                              TR1=0;
  95   2                              }*/
  96   2          } 
  97   1      
  98   1      }
  99          void anjianyin(void)            //蜂鸣器控制（按键音）//
 100          {               
 101   1              unsigned char k; /////局部变量定义
 102   1              for(k=248;k>0;k--) ////内层循环
 103   1              {
 104   2                      fmq=0;
 105   2                      delay500us();
 106   2                      fmq=1;
 107   2                      delay500us();                   
 108   2              }
 109   1      }  
 110          ///////////////////////////////////////////////////
 111          //函数名称:void key(void)
 112          //函数功能:按键函数
 113          //入口参数:
 114          //出口参数:
C51 COMPILER V9.57.0.0   MAIN                                                              11/29/2021 17:53:07 PAGE 3   

 115          //函数说明:
 116          ///////////////////////////////////////////////////
 117          void key(void)      //按键函数
 118          {
 119   1              
 120   1              if(key_1==0)/////////如果按键按下
 121   1              {
 122   2                delay10ms();///////延时10ms
 123   2                if(key_1==0)///////按键的确按下
 124   2                  {
 125   3                                      anjianyin();
 126   3                                      jsq_1s++;
 127   3                                      if(jsq_1s>=60)
 128   3                                      {
 129   4                                              jsq_1s=0;
 130   4                                      }
 131   3                                      SEG_3=jsq_1s/10;                                                                //显示秒数的十位//
 132   3                                      SEG_4=jsq_1s%10;        
 133   3                      while(key_1==0){display_seg();}///////按键等待抬起
 134   3                      }
 135   2              }
 136   1              if(key_2==0)/////////如果按键按下
 137   1              {
 138   2                delay10ms();///////延时10ms
 139   2                if(key_2==0)///////按键的确按下
 140   2                  {
 141   3                      anjianyin();
 142   3                      jsq_1s--;
 143   3                      if(jsq_1s>=60)
 144   3                                      {
 145   4                                              jsq_1s=0;
 146   4                                      }
 147   3                                      SEG_3=jsq_1s/10;                                                                //显示秒数的十位//
 148   3                                      SEG_4=jsq_1s%10;                        
 149   3                      while(key_2==0){display_seg();}///////按键等待抬起
 150   3                      }
 151   2              }
 152   1              if(key_3==0)/////////如果按键按下
 153   1              {
 154   2                delay10ms();///////延时10ms
 155   2                if(key_3==0)///////按键的确按下
 156   2                  {
 157   3                      /////初始化蜂鸣器
 158   3                      anjianyin();
 159   3                      key_counter++;
 160   3                      if(key_counter==1){TR0=1;}
 161   3                      if(key_counter==2){TR0=0;}
 162   3                      if(key_counter==3){TR0=0;jsq_1s=0;jsq_2s=0;SEG_3=jsq_1s/10;SEG_4=jsq_1s%10;}
 163   3                      if(key_counter==4){key_counter=0;TR0=1;}                
 164   3                      while(key_3==0){display_seg();}///////按键等待抬起
 165   3                      }
 166   2              }
 167   1              if(key_4==0)/////////如果按键按下
 168   1              {
 169   2                delay10ms();///////延时10ms
 170   2                if(key_4==0)///////按键的确按下
 171   2                  {
 172   3                              anjianyin();
 173   3                              flag_baojing=!flag_baojing;
 174   3                              TR0=1;                  
 175   3                      while(key_4==0){display_seg();}///////按键等待抬起
 176   3                      }
C51 COMPILER V9.57.0.0   MAIN                                                              11/29/2021 17:53:07 PAGE 4   

 177   2              }
 178   1      }
 179          
 180          
 181          ///////////////////////////////////////////////////
 182          //函数名称:void baojing(void)
 183          //函数功能:报警函数
 184          //入口参数:
 185          //出口参数:
 186          //函数说明:
 187          ///////////////////////////////////////////////////
 188          void baojing(void)
 189          {
 190   1      unsigned  int baojing_i;
 191   1                        for(baojing_i=2;baojing_i>0;baojing_i--)
 192   1                         { 
 193   2                                       L5=~L5;  
 194   2                                       alarm_buzzer();                                 //P1_0取反//
 195   2                              //delay50us();            //延时500us//
 196   2                         }
 197   1      }
 198          ///////////////////////////////////////////////////
 199          //函数名称:void alarm_buzzer(void)
 200          //函数功能:报警子程序
 201          //入口参数:
 202          //出口参数:
 203          //函数说明:
 204          ///////////////////////////////////////////////////
 205          void alarm_buzzer(void)         //延时10ms的子程序//
 206          {               
 207   1                      unsigned char k; /////局部变量定义
 208   1                      for(k=248;k>0;k--) ////内层循环
 209   1                      {
 210   2                      fmq=1;
 211   2                      //delay50us();
 212   2                              display_seg();  
 213   2                      fmq=0;
 214   2                      //delay50us();
 215   2                              display_seg();  
 216   2                      }
 217   1                      fmq = 1;
 218   1      }  
 219          
 220          ///////////////////////////////////////////////////
 221          //函数名称:void display(void)
 222          //函数功能:显示函数
 223          //入口参数:
 224          //出口参数:
 225          //函数说明:
 226          ///////////////////////////////////////////////////
 227          void display(void)      //显示函数
 228          {
 229   1      //////////////持续显示程序/////////////////////////////
 230   1              P1=~0xff;///////将计数值送P0口利用LED指示灯以BCD码（8421码）显示
 231   1              delay02s();
 232   1              delay02s();
 233   1              P1=0xff;
 234   1      //////////////闪烁显示函数/////////////////////////////
 235   1      /*
 236   1              P0=~count;///////将计数值送P0口利用LED指示灯以BCD码（8421码）显示
 237   1              delay02s();///延时0.2s
 238   1              P0=0xff;///////P0口8条线全送高电平，目的熄灭所有LED指示灯
C51 COMPILER V9.57.0.0   MAIN                                                              11/29/2021 17:53:07 PAGE 5   

 239   1              delay02s();///延时0.2s
 240   1      */
 241   1      }
 242          ///////////////////////////////////////////////////
 243          //函数名称:void display_seg(void)
 244          //函数功能:数码管显示函数
 245          //入口参数:
 246          //出口参数:
 247          //函数说明:
 248          ///////////////////////////////////////////////////
 249          void display_seg(void)      //显示函数
 250          {
 251   1              
 252   1      //SEG_8=seg_key%10;
 253   1      //SEG_7=seg_key/10;     
 254   1      /////////1位显示//////////////////////
 255   1      P0=table[SEG_1];//////数据从P0口送出到IC7---74HC573锁存器
 256   1      P26=0;P26=1;P26=0;///IC7数据锁存
 257   1      P0=~0x10;//////位码从P0口送出到IC6---74HC573锁存器
 258   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 259   1           delay500us();///延时500us
 260   1      /////////黑屏显示//////////////////////
 261   1      P0=table[17];//////数据从P0口送出到IC7---74HC573锁存器
 262   1      P26=0;P26=1;P26=0;///IC7数据锁存//////clk信号
 263   1      P0=~0x00;//////位码从P0口送出到IC6---74HC573锁存器
 264   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 265   1      /////////2位显示//////////////////////
 266   1      P0=table[SEG_2];//////数据从P0口送出到IC7---74HC573锁存器
 267   1      P26=0;P26=1;P26=0;///IC7数据锁存
 268   1      P0=~0x20;//////位码从P0口送出到IC6---74HC573锁存器
 269   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 270   1           delay500us();///延时500us
 271   1      /////////黑屏显示//////////////////////
 272   1      P0=table[17];//////数据从P0口送出到IC7---74HC573锁存器
 273   1      P26=0;P26=1;P26=0;///IC7数据锁存//////clk信号
 274   1      P0=~0x00;//////位码从P0口送出到IC6---74HC573锁存器
 275   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 276   1      /////////3位显示//////////////////////
 277   1      P0=table[SEG_3];//////数据从P0口送出到IC7---74HC573锁存器
 278   1      P26=0;P26=1;P26=0;///IC7数据锁存
 279   1      P0=~0x40;//////位码从P0口送出到IC6---74HC573锁存器
 280   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 281   1           delay500us();///延时500us
 282   1      /////////黑屏显示//////////////////////
 283   1      P0=table[17];//////数据从P0口送出到IC7---74HC573锁存器
 284   1      P26=0;P26=1;P26=0;///IC7数据锁存//////clk信号
 285   1      P0=~0x00;//////位码从P0口送出到IC6---74HC573锁存器
 286   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 287   1      /////////4位显示//////////////////////
 288   1      P0=table[SEG_4];//////数据从P0口送出到IC7---74HC573锁存器
 289   1      P26=0;P26=1;P26=0;///IC7数据锁存
 290   1      P0=~0x80;//////位码从P0口送出到IC6---74HC573锁存器
 291   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 292   1           delay500us();///延时500us
 293   1      /////////黑屏显示//////////////////////
 294   1      P0=table[17];//////数据从P0口送出到IC7---74HC573锁存器
 295   1      P26=0;P26=1;P26=0;///IC7数据锁存//////clk信号
 296   1      P0=~0x00;//////位码从P0口送出到IC6---74HC573锁存器
 297   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 298   1      /////////5位显示//////////////////////
 299   1      P0=table[SEG_5];//////数据从P0口送出到IC7---74HC573锁存器
 300   1      P26=0;P26=1;P26=0;///IC7数据锁存
C51 COMPILER V9.57.0.0   MAIN                                                              11/29/2021 17:53:07 PAGE 6   

 301   1      P0=~0x01;//////位码从P0口送出到IC6---74HC573锁存器
 302   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 303   1           delay500us();///延时500us
 304   1      /////////黑屏显示//////////////////////
 305   1      P0=table[17];//////数据从P0口送出到IC7---74HC573锁存器
 306   1      P26=0;P26=1;P26=0;///IC7数据锁存//////clk信号
 307   1      P0=~0x00;//////位码从P0口送出到IC6---74HC573锁存器
 308   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 309   1      /////////6位显示//////////////////////
 310   1      P0=table[SEG_6];//////数据从P0口送出到IC7---74HC573锁存器
 311   1      P26=0;P26=1;P26=0;///IC7数据锁存
 312   1      P0=~0x02;//////位码从P0口送出到IC6---74HC573锁存器
 313   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 314   1           delay500us();///延时500us
 315   1      /////////黑屏显示//////////////////////
 316   1      P0=table[17];//////数据从P0口送出到IC7---74HC573锁存器
 317   1      P26=0;P26=1;P26=0;///IC7数据锁存//////clk信号
 318   1      P0=~0x00;//////位码从P0口送出到IC6---74HC573锁存器
 319   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 320   1      /////////7位显示//////////////////////
 321   1      P0=table[SEG_7];//////数据从P0口送出到IC7---74HC573锁存器
 322   1      P26=0;P26=1;P26=0;///IC7数据锁存
 323   1      P0=~0x04;//////位码从P0口送出到IC6---74HC573锁存器
 324   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 325   1           delay500us();///延时500us
 326   1      /////////黑屏显示//////////////////////
 327   1      P0=table[17];//////数据从P0口送出到IC7---74HC573锁存器
 328   1      P26=0;P26=1;P26=0;///IC7数据锁存//////clk信号
 329   1      P0=~0x00;//////位码从P0口送出到IC6---74HC573锁存器
 330   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 331   1      /////////8位显示//////////////////////
 332   1      P0=table[SEG_8];//////数据从P0口送出到IC7---74HC573锁存器
 333   1      P26=0;P26=1;P26=0;///IC7数据锁存
 334   1      P0=~0x08;//////位码从P0口送出到IC6---74HC573锁存器
 335   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 336   1           delay500us();///延时500us
 337   1      /////////黑屏显示//////////////////////
 338   1      P0=table[17];//////数据从P0口送出到IC7---74HC573锁存器
 339   1      P26=0;P26=1;P26=0;///IC7数据锁存//////clk信号
 340   1      P0=~0x00;//////位码从P0口送出到IC6---74HC573锁存器
 341   1      P27=0;P27=1;P27=0;///IC6位码数据锁存
 342   1      }
 343          ///////////////////////////////////////////////////
 344          //函数名称:void delay500us(void)
 345          //函数功能:延时500us秒的子程序
 346          ///////////////////////////////////////////////////
 347          void delay500us(void)           //延时10ms的子程序//
 348          {               
 349   1                      unsigned char k; /////局部变量定义
 350   1      //              for(i=20;i>0;i--)   //最外层循环
 351   1      //                      {
 352   1      //                      for(j=20;j>0;j--)   // 上层循环
 353   1      //                                      {
 354   1                                                      for(k=248;k>0;k--) ////内层循环
 355   1                                                              {
 356   2                                                              ;
 357   2                                                              }
 358   1      //                                      }
 359   1      //                      }
 360   1      }  
 361          ///////////////////////////////////////////////////
 362          //函数名称:void delay10ms(void)
C51 COMPILER V9.57.0.0   MAIN                                                              11/29/2021 17:53:07 PAGE 7   

 363          //函数功能:延时10ms秒的子程序
 364          ///////////////////////////////////////////////////
 365          void delay10ms(void)            //延时10ms的子程序//
 366          {               
 367   1      //              unsigned char i,j,k; /////局部变量定义
 368   1                      unsigned char j,k; /////局部变量定义
 369   1      //              for(i=20;i>0;i--)   //最外层循环
 370   1      //                      {
 371   1                              for(j=20;j>0;j--)   // 上层循环
 372   1                                              {
 373   2                                                      for(k=248;k>0;k--) ////内层循环
 374   2                                                              {
 375   3                                                              ;
 376   3                                                              }
 377   2                                              }
 378   1      //                      }
 379   1      } 
 380           
 381          ///////////////////////////////////////////////////
 382          //函数名称:void delay50us(void)
 383          //函数功能:延时50us秒的子程序
 384          ///////////////////////////////////////////////////
 385          void delay50us(void)            //延时10ms的子程序//
 386          {               
 387   1                      unsigned int k; /////局部变量定义
 388   1      
 389   1                              for(k=50;k>0;k--) ////内层循环
 390   1                                      {
 391   2                                      ;
 392   2                                      }
 393   1      
 394   1      }  
 395          
 396          ///////////////////////////////////////////////////
 397          //函数名称:void delay02s(void)
 398          //函数功能:延时0.2秒的子程序
 399          ///////////////////////////////////////////////////
 400          void delay02s(void)             //延时子程序//
 401          {               
 402   1                      unsigned char i,j,k; /////局部变量定义
 403   1                      for(i=20;i>0;i--)   //最外层循环
 404   1                              {
 405   2                              for(j=20;j>0;j--)   // 上层循环
 406   2                                              {
 407   3                                                      for(k=248;k>0;k--) ////内层循环
 408   3                                                              {
 409   4                                                              ;
 410   4                                                              }
 411   3                                              }
 412   2                              }
 413   1      } 
 414          ///////////////////////////////////////////////////
 415          //函数名称:void int_time0(void)
 416          //函数功能:定时器t0初始化
 417          //入口参数:
 418          //出口参数:
 419          //函数说明:
 420          ///////////////////////////////////////////////////
 421          void int_time0(void) 
 422          {
 423   1              //设置定时器0工作方式//
 424   1              TMOD=0x01;                                                              //定义为定时器0方式1 0000 0001//
C51 COMPILER V9.57.0.0   MAIN                                                              11/29/2021 17:53:07 PAGE 8   

 425   1              //赋值方法1 50ms//
 426   1              TH0=(65536-50000)/256;                                  //赋初值//
 427   1              TL0=(65536-50000)%256;
 428   1              //赋值方法2//
 429   1      //      TH0=(65536-50000)>>8;                                   //赋初值//
 430   1      //      TL0=(65536-50000);
 431   1              //赋初值方法3_16进制赋值法//
 432   1      //      TH0=0x3c;                                       //赋初值//
 433   1      //      TL0=0xb0;
 434   1      
 435   1              //打开中断通道//
 436   1              ET0=1;                                                                  //开启定时器0溢出中断//
 437   1              EA=1;                                                                   //开启总的中断开关//
 438   1      ///////50ms计数器和1S计数器初始内容清零///////
 439   1              jsq_50ms=0;
 440   1              jsq_1s=0;
 441   1      ///////显示秒计数器内容准备///////
 442   1      
 443   1              SEG_3=jsq_1s/10;                                                        //3数码管显示秒数的十位//
 444   1              SEG_4=jsq_1s%10;                                                        //4数码管显示秒数的个位//
 445   1      
 446   1      ///////开表/////
 447   1              TR0=1;
 448   1                                                                              //开启定时器0//
 449   1      //////////t1设置/////////////////////////////////////////
 450   1              TH1=(65536-5000)/256;                                   //赋初值//
 451   1              TL1=(65536-5000)%256;
 452   1              ET1=1;                                                                  //开启定时器0溢出中断//
 453   1      //      EA=1;
 454   1              TR1=0;
 455   1      }
 456          
 457          ///////////////////////////////////////////////////
 458          //函数名称:void interrupt_t0(void)      interrupt       1
 459          //函数功能:t0中断函数
 460          //入口参数:
 461          //出口参数:
 462          //函数说明:
 463          ///////////////////////////////////////////////////
 464          void    interrupt_t0(void)      interrupt       1               //定时器0溢出中断//
 465          {
 466   1      ////////////赋初值//////////////////////////////////
 467   1              //赋初值方法1_直接计算法//
 468   1              TH0=(65536-50000)/256;                                  //赋初值//
 469   1              TL0=(65536-50000)%256;
 470   1              //赋初值方法2_移位和赋值方法//
 471   1      //      TH0=(65536-50000)>>8;                                   //赋初值//
 472   1      //      TL0=(65536-50000);
 473   1              //赋初值方法3_16进制赋值法//
 474   1      //      TH0=0x3c;                                       //赋初值//
 475   1      //      TL0=0xb0;
 476   1      
 477   1              jsq_50ms++;                                                                                     //每到一个中断为50毫秒,jsq_50ms加1//
 478   1              if(jsq_50ms==20)                                                                        //到来20次中断后,每20次一秒;jsq_50ms重新计数//
 479   1                      {       
 480   2                      jsq_50ms=0;
 481   2       /////////秒计数 /////////
 482   2                      jsq_1s++;                                                                               //每来20次中断即为1秒,jsq_1s加1//
 483   2       /////////报警控制_长度控制方法/////////
 484   2                      if(jsq_1s>=30&&jsq_1s<=40)
 485   2                              {
 486   3                              if(flag_baojing==0)
C51 COMPILER V9.57.0.0   MAIN                                                              11/29/2021 17:53:07 PAGE 9   

 487   3                                      {baojing();}
 488   3                              }
 489   2                      if(jsq_1s>=30)
 490   2      /////////分计数 /////////
 491   2                      if(jsq_1s==60)                                                                  //每到60秒,进分位，秒清零则重新计时//
 492   2                              {       
 493   3                              jsq_1s=0;
 494   3                              jsq_baojing=0; //复位报警计数器初值
 495   3                              }
 496   2      
 497   2      
 498   2              ///////显示秒计数器内容准备///////
 499   2              SEG_1=16;
 500   2                      SEG_2=16;//显示“-”
 501   2                      SEG_3=jsq_1s/10;                                                                //显示秒数的十位//
 502   2                      SEG_4=jsq_1s%10;                                                                //显示秒数的个位//
 503   2      
 504   2      
 505   2      ///             if(jsq_1s>=10&&jsq_1s<=20){P1_4=1;}     else{P1_4=0;}                                                   
 506   2                      }
 507   1      
 508   1      }
 509          
 510          
 511          void display_ceshi_8(void)     //8个数码管测试函数 
 512          {
 513   1              unsigned int i,k;
 514   1              unsigned int j=10;
 515   1      for(k=0;k<10;k++)
 516   1      {
 517   2              j=j-1;
 518   2      
 519   2                for(i=0;i<100;i++)
 520   2                 {
 521   3                      SEG_1=j;SEG_2=j;SEG_3=j;SEG_4=j;SEG_5=j;SEG_6=j;SEG_7=j;SEG_8=j;
 522   3                      display_seg();     //8个调用数码管显示函数
 523   3                      }
 524   2      }
 525   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    957    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
